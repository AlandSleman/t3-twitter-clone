/** @format */
import { useSession, signIn, signOut } from "next-auth/react";
import Head from "next/head";
import { ReactNode, useEffect, useRef, useState } from "react";

const Auth = ({ children }: { children: ReactNode }) => {
    const { data: session, status } = useSession();

    if (status === "loading") {
        return <>

            </>;
    }
    if (status === "unauthenticated") {
        return (
            <>
                <Head>
                    <title>Login</title>
                    <meta name="description" content="Generated by create-t3-app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <div className="">
                    <div className="flex items-center justify-center space-x-2">
                        <div className="w-1/3 border-r-2 pr-2">
                            <SignUp />
                        </div>
                        <div className="w-1/3 ">
                            <Login />
                        </div>
                    </div>
                    <div style={{ paddingBottom: 299 }} className=""></div>
                </div>
            </>
        );
    }

    return <>{children}</>;
};

export default Auth;

function SignUp() {
    const [error, setError] = useState("");
    let usernameInputRef: any = useRef();
    let passwordInputRef: any = useRef();
    async function signup(e: any) {
        e.preventDefault();
        let username = usernameInputRef.current.value;
        let password = passwordInputRef.current.value;
        let data = { username, password };
    }
    return (
        <form onSubmit={signup} className="w-full">
            <div className="my-4 text-xl font-bold">Sign Up</div>
            <div className="mb-6">
                <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-gray-300">
                    Username
                </label>
                <input
                    ref={usernameInputRef}
                    className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                    required
                />
            </div>
            <div className="mb-6">
                <label
                    htmlFor="password"
                    className="mb-2 block text-sm font-medium text-gray-900 dark:text-gray-300"
                >
                    Password
                </label>
                <input
                    ref={passwordInputRef}
                    type="password"
                    id="password"
                    className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                    required
                />
            </div>
            {error && <div className="text-red-500">{error} </div>}
            <div className="mb-6 flex items-start"></div>
            <button
                type="submit"
                className="w-full rounded-lg bg-blue-700 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 sm:w-auto"
            >
                Sign Up
            </button>
        </form>
    );
}
function Login() {
    const [error, setError] = useState("");
    let usernameInputRef: any = useRef();
    let passwordInputRef: any = useRef();
    async function login(e: any) {
        e.preventDefault();
        let username = usernameInputRef.current.value;
        let password = passwordInputRef.current.value;
        let data = { username, password };
    }
    return (
        <form onSubmit={login} className="w-full">
            <div className="my-4 text-xl font-bold">Login</div>
            <div className="mb-6">
                <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-gray-300">
                    Username
                </label>
                <input
                    ref={usernameInputRef}
                    className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                    required
                />
            </div>
            <div className="mb-6">
                <label
                    htmlFor="password"
                    className="mb-2 block text-sm font-medium text-gray-900 dark:text-gray-300"
                >
                    Password
                </label>
                <input
                    ref={passwordInputRef}
                    type="password"
                    id="password"
                    className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                    required
                />
            </div>
            {error && <div className="text-red-500">{error} </div>}
            <div className="mb-6 flex items-start"></div>
            <button
                onClick={async () =>
                    console.log(
                        "loginnnnnnnnnnnnnnnnnnnm,",
                        await signIn("github", { redirect: false })
                    )
                }
            >
                Sign in
            </button>
            <button onClick={() => signOut()}>Sign Out</button>
            <button
                type="submit"
                className="w-full rounded-lg bg-blue-700 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 sm:w-auto"
            >
                Sign Up
            </button>
        </form>
    );
}
